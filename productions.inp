S S0 P P0 D V I I0 I1 A E E0 E1 E2 E3 IDTAIL PARA PARA2 C C0
S Function func id ( P ) D S0 #
S0 -FunctionConcat S #
S0 -FunctionConcatEnd #
P FunctionParams id type P0 #
P NoFunctionParam #
P0 -FunctionParamConcat , P #
P0 -FunctionParamsEnd #
D ReturningFuncBody type { V return C ; } ##
D FuncBody { V } ##
V IFInstruction if I V #
V AssignInstruction A ; V #
V InstructionsEnd #
I IFBody C D I0 #
I0 -Else else I1 #
I0 EndIF #
I1 ElseIf if I #
I1 SimpleElse D #
A VarAssign var id type := C #
A StandaloneExpr C #
C 2ComparisonTest E C0 #
C0 -CompNotEq != E #
C0 -CompEq == E #
C0 -CompLessEq <= E #
C0 -CompMoreEq >= E #
C0 -CompLess < E #
C0 -CompMore > E #
C0 -NoComp #
E 2Expression E1 E0 #
E0 -SumExp + E1 E0 #
E0 -SubExp - E1 E0 #
E0 -SumExpEnd #
E1 2Term E3 E2 #
E2 -TermMult * E3 E2 #
E2 -TermDiv / E3 E2 #
E2 -TermEnd #
E3 -Paren ( C ) #
E3 Variable id IDTAIL #
E3 -Number num #
E3 -StringLit str #
E3 -Bool bool #
IDTAIL CallParams ( PARA ) #
IDTAIL VarLookup #
PARA FirstParam C PARA2 #
PARA NoParams #
PARA2 ParaConcat , C PARA2 #
PARA2 ParaEnd #